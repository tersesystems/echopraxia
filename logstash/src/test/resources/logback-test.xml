<configuration>

    <!-- tell async logger to create a throwable -->
    <property scope="context" name="echopraxia.async.caller" value="true"/>

    <!-- loosen the rule on appender refs so appenders can reference them -->
    <newRule pattern="*/appender/appender-ref"
             actionClass="ch.qos.logback.core.joran.action.AppenderRefAction"/>

    <!-- always create a logging event if the SECURITY marker exists -->
    <!-- this dies in 1.3.x because it tries to get the markerfactory while still configuring, so it is null -->
    <!--    <turboFilter class="ch.qos.logback.classic.turbo.MarkerFilter">-->
    <!--        <Marker>SECURITY</Marker>-->
    <!--        <OnMatch>ACCEPT</OnMatch>-->
    <!--    </turboFilter>-->

    <appender name="LIST" class="ch.qos.logback.core.read.ListAppender">
    </appender>

    <appender name="STRINGLIST" class="echopraxia.logstash.EncodingListAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <providers>
                <timestamp/>
                <message/>
                <loggerName/>
                <threadName/>
                <logLevel/>
                <callerData/>
                <mdc/>
                <logstashMarkers/>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>

    <appender name="caller" class="echopraxia.logback.CallerDataAppender">
        <appender-ref ref="LIST"/>
        <appender-ref ref="STRINGLIST"/>
    </appender>

    <root level="DEBUG">
        <appender-ref ref="caller"/>
    </root>
</configuration>