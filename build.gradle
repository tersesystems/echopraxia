// https://xvik.github.io/gradle-mkdocs-plugin/latest/
plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'com.diffplug.spotless'  version '6.1.0'
    id "maven-publish"
}

apply from: "gradle/release.gradle"

repositories {
    mavenLocal()
    mavenCentral()
}

spotless {
    freshmark {
        target 'README.md'
    }
}

subprojects { subproj ->
    apply plugin: 'java-library'
    apply plugin: 'com.diffplug.spotless'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    spotless {
        java {
            googleJavaFormat()
        }
    }

    // https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_source_sets
    sourceSets {
        jmh {
            java.srcDirs = ['src/jmh/java']
            resources.srcDirs = ['src/jmh/resources']
            compileClasspath += sourceSets.main.runtimeClasspath
        }
    }

    // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.JavaExec.html
    task jmh(type: JavaExec, dependsOn: jmhClasses) {
        mainClass.set("org.openjdk.jmh.Main")
        classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath

        // To enable the built-in stacktrace sampling profiler
        // args = ['-prof', 'stack']
        args = ['-prof', 'gc']
    }

    // to make sure benchmarks always get compiled
    classes.finalizedBy(jmhClasses)

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    dependencies {
        // https://docs.gradle.org/6.7.1/release-notes.html
        compileOnlyApi 'org.jetbrains:annotations:23.0.0'

        // Fix a dependency in log4jbenchmarks
        jmhImplementation 'org.jetbrains:annotations:23.0.0'

        jmhImplementation 'org.openjdk.jmh:jmh-core:1.34'
        jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.34'

        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
        testImplementation 'org.assertj:assertj-core:3.21.0'
        testImplementation 'org.awaitility:awaitility:4.1.1'
    }

    tasks.named('test') {
        // Use JUnit Platform for unit tests.
        useJUnitPlatform()
    }
}
